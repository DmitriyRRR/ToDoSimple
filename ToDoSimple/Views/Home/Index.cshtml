@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using ToDoSimple.Models.Pagination;
@using ToDoSimple.Controllers;
@model PageViewModel;
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <div class="col-8">
        <table class="table table-borderless text-start">
            <tbody>
                <tr>
                    <th><u></u></th>
                    <th><u>Name</u></th>
                    <th><u>Description</u></th>
                    <th><u>Is Completed</u></th>
                    <th><u>Create Stamp</u></th>
                    <th><u>Details</u></th>
                </tr>
                @foreach (var note in Model.Notes)
                {
                    <tr>
                        <th>
                            <a href="/home/delete/@note.Id"><button class="btn-close w-25"></button></a>
                        </th>
                        <th><a href="/home/edit/@note.Id">@note.Name</a></th>
                        <th>@note.ExpireDate</th>
                        <th>@(note.IsCompleted ? "Done!" : "In process")</th>
                        <th>@note.CreatedTimestamp</th>
                        <th>
                            <a href="/home/details/@note.Id">Details</a>
                        </th>
                    </tr>
                }
            </tbody>
        </table>

        <nav aria-label="Pagination">
            <ul class="pagination">
                <li class="page-item">
                    @if (Model.HasPreviousPage)
                    {
                        <a asp-action="Index"
                           asp-route-pageNumber="@(Model.PageNumber-1)"
                           class="page-link" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    }
                </li>
                @if (Model.PageNumber == 1)
                {
                    <li class="page-item"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber)">"@(Model.PageNumber)"</a></li>
                }
                @if(Model.PageNumber >1 && Model.PageNumber<Model.TotalPages)
                {
                    <li class="page-item"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber -1)">@(Model.PageNumber -1)</a></li>
                    <li class="page-item"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber)">@(Model.PageNumber)</a></li>
                    <li class="page-item"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber+1)">@(Model.PageNumber+1)</a></li>

                }
                @if (Model.PageNumber == Model.TotalPages)
                {
                    <li class="page-item"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber -1)">@(Model.PageNumber - 1)</a></li>
                    <li class="page-item"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber)">@(Model.PageNumber)</a></li>
                }
                <li>
                    @if (Model.HasNextPage)
                    {
                        <a asp-action="Index"
                           asp-route-pageNumber="@(Model.PageNumber+1)"
                           class="btn btn-outline-dark">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    }
                </li>
            </ul>
        </nav>

    </div>
</div>

<form class="mt-3" asp-controller="Home" asp-action="Create" method="get">
    <button class="btn btn-outline-success w -100">Create new note</button>
</form>

<form class="mt-3" asp-controller="Account" asp-action="logout">
    <button class="btn btn-outline-danger btn-sm">Logout</button>
</form>

