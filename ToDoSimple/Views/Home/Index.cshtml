@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using ToDoSimple.Models.Pagination;
@using ToDoSimple.Controllers;
@model PaginatedList<ToDoSimple.Models.Note>;
@{
    ViewData["Title"] = "Home Page";
}
<head>
    <link rel="stylesheet" href="~/lib/font-awesome/css/all.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
</head>
<div class="text-center">
    <div class="col-8">
        <form asp-action="index" method="get">
            <div class="form-floating">
                <p>
                    Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                    <input class="btn btn-outline-info w -75" type="submit" value="Search" /> |
                    <a asp-action="Index">Back to Full List</a>
                </p>
            </div>
        </form>
        <table class="table table-hover table-striped">
            <tbody>

                <tr>
                    @foreach (var note in Model)
                    {
                    <tr>
                        <th>
                                @await Html.PartialAsync("_PartialNoteView.cshtml", note)
                        </th>
                    </tr>
                    <tr>
                    </tr>

                    }
            </tbody>
        </table>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
        <nav aria-label="Pagiantion">
            <ul class="pagination justify-content-center">

                <link class="page-item">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-default @prevDisabled">
                    <-
                </a>
                </li>
                <link class="page-item">
                <form asp-action="Index"
                      asp-route-sortOrder="@ViewData["CurrentSort"]"
                      asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    <input type="number" min="1" max="@Model.TotalPages" name="pageNumber" value="@Model.PageIndex" placeholder="@Model.PageIndex" />
                    <input class="btn btn-outline-info w -50" type="submit" value="Go" />
                </form>
                </li>
                <link class="page-item">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-default @nextDisabled">
                    ->
                </a>
                </li>
            </ul>
        </nav>
        @*         <nav aria-label="Pagination">
        <ul class="pagination justify-content-center">
        <li class="page-item">
        @if (Model.HasPreviousPage)
        {
        <a asp-action="Index"
        asp-route-pageNumber="@(Model.PageNumber-1)"
        class="page-link" aria-label="Previous">
        <span aria-hidden="true">&laquo;</span>
        </a>
        }
        </li>
        @if (Model.PageNumber == 1)
        {
        <li class="page-item active"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber)">@(Model.PageNumber)</a></li>
        }
        @if (Model.PageNumber > 1 && Model.PageNumber < Model.TotalPages)
        {
        <li class="page-item"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber -1)">@(Model.PageNumber - 1)</a></li>
        <li class="page-item active"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber)">@(Model.PageNumber)</a></li>
        <li class="page-item"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber+1)">@(Model.PageNumber + 1)</a></li>

        }
        @if (Model.PageNumber == Model.TotalPages)
        {
        <li class="page-item"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber -1)">@(Model.PageNumber - 1)</a></li>
        <li class="page-item active"><a class="page-link" asp-controller="Home" asp-route-pageNumber="@(Model.PageNumber)">@(Model.PageNumber)</a></li>
        }
        <li>
        @if (Model.HasNextPage)
        {
        <a asp-action="Index"
        asp-route-pageNumber="@(Model.PageNumber+1)"
        class="btn btn-outline-dark">
        <span aria-hidden="true">&raquo;</span>
        </a>
        }
        </li>
        </ul>
        <span>@Model.PageNumber page from @Model.TotalPages pages </span>
        </nav> *@

    </div>
</div>

<form class="mt-3" asp-controller="Home" asp-action="Create" method="get">
    <button class="btn btn-outline-success w -100">Create new note</button>
</form>

<form class="mt-3" asp-controller="Account" asp-action="logout">
    <button class="btn btn-outline-danger btn-sm">Logout</button>
</form>

